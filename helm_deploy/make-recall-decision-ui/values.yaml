---
generic-service:
  nameOverride: make-recall-decision-ui

  replicaCount: 4

  image:
    repository: quay.io/hmpps/make-recall-decision-ui
    tag: app_version    # override at deployment time
    port: 3000

  ingress:
    enabled: true
    host: app-hostname.local    # override per environment
    tlsSecretName: make-recall-decision-cert
    annotations:
      nginx.ingress.kubernetes.io/limit-rpm: "200"

  livenessProbe:
    httpGet:
      path: /ping

  readinessProbe:
    httpGet:
      path: /health

  custommetrics:
    enabled: true
    scrapeInterval: 15s
    metricsPath: /metrics
    metricsPort: 3001

  # Environment variables to load into the deployment
  env:
    NODE_ENV: "production"
    REDIS_TLS_ENABLED: "true"
    TOKEN_VERIFICATION_ENABLED: "true"
    SENTRY_DSN: https://5c9e4014e8064f8c846bfbeb1810a32f@o345774.ingest.sentry.io/6360608
    AUDIT_SERVICE_NAME: "make-recall-decision-ui"
    AUDIT_SQS_REGION: "eu-west-2"

  # Pre-existing kubernetes secrets to load as environment variables in the deployment.
  # namespace_secrets:
  #   [name of kubernetes secret]:
  #     [name of environment variable as seen by app]: [key of kubernetes secret to load]

  namespace_secrets:
    make-recall-decision-ui:
      APPINSIGHTS_INSTRUMENTATIONKEY: "APPINSIGHTS_INSTRUMENTATIONKEY"
      API_CLIENT_ID: "API_CLIENT_ID"
      API_CLIENT_SECRET: "API_CLIENT_SECRET"
      SYSTEM_CLIENT_ID: "SYSTEM_CLIENT_ID"
      SYSTEM_CLIENT_SECRET: "SYSTEM_CLIENT_SECRET"
      SESSION_SECRET: "SESSION_SECRET"
    elasticache-redis:
      REDIS_HOST: "primary_endpoint_address"
      REDIS_AUTH_TOKEN: "auth_token"
    sqs-hmpps-audit-secret:
      AUDIT_SQS_ACCESS_KEY_ID: "access_key_id"
      AUDIT_SQS_SECRET_ACCESS_KEY: "secret_access_key"
      AUDIT_SQS_QUEUE_URL: "sqs_queue_url"
      AUDIT_SQS_QUEUE_NAME: "sqs_queue_name"

generic-prometheus-alerts:
  targetApplication: make-recall-decision-ui
