{% extends "../../partials/layout.njk" %}

{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}
{% from "components/mappa-widget/macro.njk" import mappaWidget %}

{% set pageTitle = makePageTitle({ pageHeading: pageTitles[page.id], hasErrors: errors }) %}

{% block beforeContent %}
    {{ backLink() }}
{% endblock %}

{% set offenceSentenceHtml %}
    {% if not caseSummary.licenceConvictions.active.length %}
        <p class='govuk-body'>This person has no active offences or convictions.</p>
    {%  else %}
        {{ govukSummaryList({
            classes: 'govuk-summary-list--no-border',
            rows: [
                {
                    key: { html: 'Date of birth' },
                    value: { text: formatDateTimeFromIsoString({isoDate: caseSummary.personalDetailsOverview.dateOfBirth }) + " (age " + caseSummary.personalDetailsOverview.age + ")" }
                }
            ]
        }) }}
        <hr/>
        {% for conviction in caseSummary.licenceConvictions.active %}
            {% set mainOffencesHtml %}
                <ul class='govuk-list'>
                    <li>{{ conviction.mainOffence.description }}</li>
                </ul>
            {% endset %}
            {% set additonalOffencesHtml %}
                <ul class='govuk-list'>
                    {% for offence in conviction.additionalOffences %}
                        <li>{{ offence.description }}</li>
                    {% endfor %}
                </ul>
            {% endset %}
            <div {% if loop.index > 1 %}class='govuk-!-margin-top-2 govuk-!-padding-top-2 border-top'{% endif %}>

                {{ govukSummaryList({
                    classes: 'govuk-summary-list--no-border',
                    attributes: {
                        'data-qa': 'conviction-' + loop.index
                    },
                    rows: [
                        {
                            key: { html: 'Main offence' },
                            value: { html: mainOffencesHtml }
                        },
                        {
                            key: { html: 'Additional offence(s)' },
                            value: { html: additonalOffencesHtml }
                        } if conviction.additionalOffences.length else undefined,
                        {
                            key: { html: 'Sentence type' },
                            value: { text: conviction.sentence.description if conviction.sentence.description else 'Not available' }
                        },
                        {
                            key: { html: 'Sentence length' },
                            value: { text: conviction.sentence.length + " " + conviction.sentence.lengthUnits if conviction.sentence.length and conviction.sentence.lengthUnits else 'Not available' }
                        }
                    ]
                }) }}
            </div>
        {% endfor %}
        <div class="govuk-!-padding-top-4">
            {{ mappaWidget({
                mappa: caseSummary.mappa,
                lastUpdatedDate: formatDateTimeFromIsoString({ isoDate: caseSummary.mappa.lastUpdatedDate, dateOnly: true })
            }) }}
        </div>
    {% endif %}
{% endset %}

{% block content %}
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds-from-desktop">
            {% include '../../partials/error-summary.njk' %}
            <form novalidate method="post">
                <input type="hidden" name="_csrf" value="{{ csrfToken }}" />

                <h1 class='govuk-heading-l'>{{ pageHeadings[page.id] }}</h1>
                <p class="govuk-body">Use the following information to answer the questions and assess which type of recall is appropriate.</p>

                {{ appSummaryCard({
                    titleText: 'NDelius details for ' + recommendation.personOnProbation.name,
                    classes: 'govuk-!-margin-bottom-6 app-summary-card--large-title',
                    html: offenceSentenceHtml
                }) }}
                {% if page.warningPanel %}
                    {% set bannerHtml%}
                        {{ heading(page.warningPanel.title, 2, 'm') }}
                        {{ bodyParagraph(page.warningPanel.body) }}
                    {% endset %}
                    {{ mojBanner({
                        type: 'warning',
                        html: bannerHtml
                    }) }}
                {% endif %}
                {% for key, field in inputDisplayValues %}
                    {{ govukRadios({
                        classes: "govuk-radios--inline",
                        idPrefix: key,
                        name: key,
                        hint: {
                            text: field.hint
                        },
                        fieldset: {
                            legend: {
                                text: field.label,
                                classes: "govuk-fieldset__legend--m",
                                isPageHeading: false
                            }
                        },
                        items: radioCheckboxItems({
                            items: formOptions.yesNo,
                            currentValues: field.value
                        }),
                        errorMessage: errorMessage(errors[key])
                    }) }}
                {% endfor %}
                {{ formSubmitButton() }}
            </form>
        </div>
    </div>
{% endblock %}

