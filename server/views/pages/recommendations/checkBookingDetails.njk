{% extends "../../partials/layout.njk" %}
{% from "components/summary-list/macro.njk" import summaryList %}
{% set editText = 'Edit' %}
{% set editIdPrefix = 'edit-' %}

{% macro formatAddress(address) %}
    {% if not address.noFixedAbode %}
        <p class="govuk-body">
            {% if address.line1 %}
                {{ address.line1 }}<br />
            {% endif %}
            {% if address.line2 %}
                {{ address.line2 }}<br />
            {% endif %}
            {% if address.town %}
                {{ address.town }}<br />
            {% endif %}
            {% if address.postcode %}
                {{ address.postcode }}<br />
            {% endif %}
        </p>
    {% endif %}
{% endmacro %}
{% macro blankSafe(value, mandatory, message) %}
    {% if value %}
        {{ value }}
    {% else %}
        {% if mandatory %}
            <svg class="govuk-icon" fill="currentColor" role="presentation" focusable="false"
                 xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25 25" height="25" width="25">
                <path d="M13.7,18.5h-2.4v-2.4h2.4V18.5z M12.5,13.7c-0.7,0-1.2-0.5-1.2-1.2V7.7c0-0.7,0.5-1.2,1.2-1.2s1.2,0.5,1.2,1.2v4.8 C13.7,13.2,13.2,13.7,12.5,13.7z M12.5,0.5c-6.6,0-12,5.4-12,12s5.4,12,12,12s12-5.4,12-12S19.1,0.5,12.5,0.5z"></path>
            </svg>
            {{ message }}
        {% else %}
            - <span class="govuk-visually-hidden">no value</span>
        {% endif %}
    {% endif %}
{% endmacro %}

{% macro editedBadge(display) %}
    {% if display %}
        <strong class="govuk-tag">
            Edited
        </strong>
    {% endif %}
{% endmacro %}

{% set pageTitle = makePageTitle({ pageHeading: pageTitles[page.id], hasErrors: errors }) %}

{% block beforeContent %}
    {{ backLink() }}
{% endblock %}

{% block content %}
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds-from-desktop">
            {% include '../../partials/error-summary.njk' %}

            <h1 class='govuk-heading-l'>{{ pageHeadings[page.id] }}</h1>

            <p class="govuk-body">
                These details will go into a PPUD record. You should:
            </p>

            <div class='govuk-list govuk-list--number'>

                <div>Uploading supporting documents.</div>

                <a class='govuk-button govuk-button--secondary govuk-!-margin-top-2 govuk-!-margin-bottom-3'
                   href='/recommendations/{{ recommendation.id }}/supporting-documents'>Upload documents</a>

                <div>Double-check everything is correct.</div>
                <div>Edit anything that's wrong.</div>

                {% if warnings|length %}
                    {% set html %}
                        <p class="govuk-body-m govuk-!-margin-bottom-0">
                            These details are different in PPUD. Edit anything that's wrong.

                        <div class="govuk-list govuk-!-margin-bottom-0">
                            {% for key, val in warnings %}
                                <div>
                                    <span class="govuk-body govuk-!-font-weight-bold">{{ key | replace("-", " - ") }}:</span>
                                    <span class="govuk-body">{{ blankSafe(val) }}</span>
                                </div>
                            {% endfor %}
                        </div>
                        </p>
                    {% endset %}

                    {{ govukNotificationBanner({
                        titleText: 'Some NOMIS information is different to PPUD',
                        html: html,
                        classes: "govuk-notification-banner--info govuk-!-margin-top-2 govuk-!-margin-bottom-2"
                    }) }}
                {% endif %}

                <div>Continue to the next page and select the index offence.</div>
            </div>

            {% if errorMessage %}
                {% set html %}
                    <h1 class="govuk-heading-m" data-qa='multiple-results'>NOMIS error</h1>
                    <span> {{ errorMessage }}</span>
                {% endset %}

                {{ mojBanner({
                    type: 'warning',
                    html: html,
                    iconFallbackText: 'none'
                }) }}
            {% endif %}

        </div>
        <div class="govuk-grid-column-full-from-desktop">
            <form novalidate method="post">
                <input type="hidden" name="_csrf" value="{{ csrfToken }}" />
                <input type="hidden" name="ppudRecordPresent" value="{{ recommendation.ppudRecordPresent }}" />

                <h2 class='govuk-heading-m govuk-!-margin-top-4 govuk-!-margin-bottom-4'>
                    Personal details
                    <span class="govuk-caption-m">Taken from NOMIS</span>
                </h2>

                {% set offenderImage %}
                    {% if recommendation.prisonOffender.image %}
                        <img src="{{ recommendation.prisonOffender.image }}" />
                    {% else %}
                        - <span class="govuk-visually-hidden">no value</span>
                    {% endif %}
                {% endset %}
                {% set firstNamesBlock %}{{ editedBadge(edited.firstNames) }}{{ blankSafe(recommendation.bookRecallToPpud.firstNames) }}{% endset %}
                {% set lastNameBlock %}{{ editedBadge(edited.lastName) }}{{ blankSafe(recommendation.bookRecallToPpud.lastName) }}{% endset %}
                {% set dateOfBirthBlock %}{{ editedBadge(edited.dateOfBirth) }}{{ blankSafe(formatDateTimeFromIsoString({ isoDate: recommendation.bookRecallToPpud.dateOfBirth, dateOnly: true })) }}{% endset %}
                {% set prisonNumberBlock %}{{ editedBadge(edited.prisonNumber) }}{{ blankSafe(recommendation.bookRecallToPpud.prisonNumber) }}{% endset %}
                {% set custodyStatusBlock %}
                    {% if recommendation.prisonOffender.status == "ACTIVE IN" %}
                        In custody
                    {% elseif recommendation.prisonOffender.status == "INACTIVE OUT" %}
                        Unlawfully at large (UAL)
                    {% elseif recommendation.prisonOffender.status == "INACTIVE TRN" %}
                        In transit - Unlawfully at large (UAL)
                    {% else %}
                        - <span class="govuk-visually-hidden">no value</span>
                    {% endif %}
                {% endset %}
                {% set addressBlock %}
                    {% if not hasLastKnownAddress and not recommendation.isMainAddressWherePersonCanBeFound.details %}
                        <div class="govuk-summary-list__value_middle"><br />- <span class="govuk-visually-hidden">no value</span>
                        </div>
                    {% else %}
                        {% if not hasLastKnownAddress %}
                            - <span class="govuk-visually-hidden">no value</span>
                        {% endif %}
                        {% for address in recommendation.personOnProbation.addresses %}
                            {{ formatAddress(address) }}
                        {% endfor %}

                        {% if recommendation.isMainAddressWherePersonCanBeFound.details %}
                            <p class="govuk-body govuk-!-font-weight-bold">
                                Additional address
                            </p>
                            <span class="govuk-body">
                                <pre class="govuk-body">
                                {{ recommendation.isMainAddressWherePersonCanBeFound.details }}
                                </pre>
                            </span>
                        {% endif %}
                    {% endif %}
                {% endset %}
                {{ summaryList({
                    id: 'personal-details-list',
                    rows: [
                        { key: 'Image', value: offenderImage },
                        { key: 'NOMIS number', value: blankSafe(recommendation.personOnProbation.nomsNumber) },
                        { key: 'First names', value: firstNamesBlock, actions: [{ id: editIdPrefix+'firstnames', text: editText, href: 'edit-name', visuallyHidden: 'first names' }] },
                        { key: 'Last name', value: lastNameBlock, actions: [{ id: editIdPrefix+'lastname', text: editText, href: 'edit-name', visuallyHidden: 'last names' }] },
                        { key: 'Gender', value: blankSafe(recommendation.bookRecallToPpud.gender, true, 'Enter a gender'), actions: [{ id: editIdPrefix+'gender', text: editText, href: 'edit-gender', visuallyHidden: 'gender' }], error: errors.gender},
                        { key: 'Ethnicity', value: blankSafe(recommendation.bookRecallToPpud.ethnicity, true, 'Enter an ethnicity'), actions: [{ id: editIdPrefix+'ethnicity', text: editText, href: 'edit-ethnicity', visuallyHidden: 'ethnicity' }], error: error.ethnicity },
                        { key: 'Date of birth', value: dateOfBirthBlock, actions: [{ id: editIdPrefix+'dateofbirth', text: editText, href: 'edit-date-of-birth', visuallyHidden: 'date of birth' }] },
                        { key: 'CRO', value: blankSafe(recommendation.bookRecallToPpud.cro), actions: [{ id: editIdPrefix+'cro', text: editText, href: 'edit-cro' , visuallyHidden: 'CRO' }] },
                        { key: 'Prison booking number', value: prisonNumberBlock, actions: [{ id: editIdPrefix+'prisonbookingnumber', text: editText, href: 'edit-prison-booking-number' , visuallyHidden: 'prison booking number' }], error: errors.prisonNumber },
                        { key: 'Releasing prison', value: blankSafe(recommendation.bookRecallToPpud.releasingPrison, true, 'Enter a releasing prison'), actions: [{ id: editIdPrefix+'releasingprison', text: editText, href: 'edit-releasing-prison' , visuallyHidden: 'releasing prison' }], error: errors.releasingPrison },
                        { key: 'Legislation released under', value: blankSafe(recommendation.bookRecallToPpud.legislationReleasedUnder, true, 'Enter legislation released under'), actions: [{ id: editIdPrefix+'legislationreleasedunder', text: editText, href: 'edit-legislation-released-under', visuallyHidden: 'legislation released under' }], error: errors.legislationReleasedUnder },
                        { key: 'Custody status', value: custodyStatusBlock },
                        { key: 'Custody type', value: blankSafe(recommendation.bookRecallToPpud.custodyType, true, 'Enter a custody type'), actions: [{ id: editIdPrefix+'custodytype', text: editText, href: 'edit-custody-type', visuallyHidden: 'custody type' }], error: errors.custodyType },
                        { key: 'Current establishment', value: blankSafe(recommendation.bookRecallToPpud.currentEstablishment, true, 'Enter an establishment'), actions: [{ id: editIdPrefix+'currentestablishment', text: editText, href: 'edit-current-establishment', visuallyHidden: 'current establishment' }], error: errors.currentEstablishment },
                        { key: 'Last known address', value: addressBlock }
                    ],
                    borderTop: true
                }) }}


                <h2 class='govuk-heading-m govuk-!-margin-top-8 govuk-!-margin-bottom-4'>
                    Probation details
                    <span class="govuk-caption-m">Taken from the Part A</span>
                </h2>

                {{ summaryList({
                    id: 'probation-details-list',
                    rows: [
                        { key: 'Recall received date', value: formatDateTimeFromIsoString({ isoDate: recommendation.bookRecallToPpud.receivedDateTime, dateOnly: true }), actions: [{ id: editIdPrefix+'recallreceiveddate', text: editText, href: 'edit-recall-received-date-and-time', visuallyHidden: 'recall received date' }] },
                        { key: 'Recall received time', value: formatDateTimeFromIsoString({ isoDate: recommendation.bookRecallToPpud.receivedDateTime, timeOnly: true }), actions: [{ id: editIdPrefix+'recallreceivedtime', text: editText, href: 'edit-recall-received-date-and-time', visuallyHidden: 'recall received time' }] },
                        { key: 'Recall decision date', value: formatDateTimeFromIsoString({ isoDate: recommendation.decisionDateTime, dateOnly: true }) },
                        { key: 'Recall decision time', value: formatDateTimeFromIsoString({ isoDate: recommendation.decisionDateTime, timeOnly: true }) },
                        { key: 'Probabtion area', value: blankSafe(recommendation.bookRecallToPpud.probationArea, true, 'Enter a probation area'), actions: [{ id: editIdPrefix+'probationarea', text: editText, href: 'edit-probation-area', visuallyHidden: 'probabtion area' }], error: errors.probationArea },
                        { key: 'Probation practitioner', value: blankSafe(practitioner.name) },
                        { key: 'Probation practitioner email', value: blankSafe(practitioner.email) },
                        { key: 'Probation practitioner phone number', value: blankSafe(practitioner.telephone) },
                        { key: 'Local police contact', value: blankSafe(recommendation.bookRecallToPpud.policeForce, true, 'Enter a local police force'), actions: [{ id: editIdPrefix+'policecontact', text: editText, href: 'edit-police-contact', visuallyHidden: 'local police contact' }], error: errors.policeForce },
                        { key: 'Senior manager (ACO)', value: acoSigned.createdByUserFullName },
                        { key: 'Senior manager (ACO) email', value: acoSigned.emailAddress },
                        { key: 'MAPPA level', value: blankSafe(recommendation.bookRecallToPpud.mappaLevel,true, 'Enter a MAPPA level'), actions: [{ id: editIdPrefix+'mpaalevel', text: editText, href: 'edit-mappa-level', visuallyHidden: 'MPAA level' }], error: errors.mappaLevel },
                        { key: 'Current risk of serious harm', value: currentHighestRosh }
                    ],
                    borderTop: true
                })}}
                
                {{ formSubmitButton({ label: 'Accept and continue' }) }}
            </form>
        </div>
    </div>
{% endblock %}