{% extends "../../partials/layout.njk" %}

{% set pageTitle = makePageTitle({ pageHeading: pageTitles[page.id], hasErrors: errors }) %}

{% block beforeContent %}
    <nav>
        {{ govukBackLink({
            text: "Back",
            href: nextPageLinkUrl({ nextPageId: 'emergency-recall', urlInfo: urlInfo })
        }) }}
    </nav>
{% endblock %}

{% block content %}
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds-from-desktop">
            {% include '../../partials/error-summary.njk' %}
            {% set yesDetailHtml %}
                {{ govukTextarea({
                    name: "hasFixedTermLicenceConditionsDetails",
                    id: "hasFixedTermLicenceConditionsDetails",
                    label: {
                        text: "Give details.",
                        classes: "govuk-label--s"
                    },
                    value: inputDisplayValues.details,
                    errorMessage: errorMessage(errors.hasFixedTermLicenceConditionsDetails)
                }) }}
            {% endset %}
            <form novalidate method="post">
                <input type="hidden" name="_csrf" value="{{ csrfToken }}" />

                <div class="govuk-caption-l">Circumstances</div>
                {{ govukRadios({
                    idPrefix: "hasFixedTermLicenceConditions",
                    name: "hasFixedTermLicenceConditions",
                    fieldset: {
                        legend: {
                            text: pageHeadings[page.id],
                            classes: "govuk-fieldset__legend--l",
                            isPageHeading: true
                        }
                    },
                    hint: {
                        html: '<p class="govuk-body">You\'re recommending a fixed term recall for ' + recommendation.personOnProbation.name + '. The prison will prepare a new licence.</p><p class="govuk-body">Do you want to add any additional conditions to the licence?</p>'
                    },
                    items: radioCheckboxItems({
                        items: formOptions.yesNo,
                        currentValues: inputDisplayValues.value,
                        conditionalContent: {
                            YES: yesDetailHtml
                        }
                    }),
                    errorMessage: errorMessage(errors.hasFixedTermLicenceConditions)
                }) }}
                {{ formSubmitButton() }}
            </form>
        </div>
    </div>
{% endblock %}

