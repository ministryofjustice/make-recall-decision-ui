{% extends "../../partials/layout.njk" %}

{% set pageTitle = makePageTitle({ pageHeading: pageTitle, hasErrors: errors }) %}

{% block beforeContent %}
    <nav>
    {{ govukBackLink({
        text: "Back to overview for " + recommendation.personOnProbation.name,
        href:  '/cases/' + recommendation.crn + '/overview'
    }) }}
    </nav>
{% endblock %}

{% block content %}
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds-from-desktop">
            <h1 class='govuk-heading-l'>{{ pageHeading }}</h1>
            <p class='govuk-body'>Youâ€™re recommending a recall for {{ recommendation.personOnProbation.name }}.
                    Complete the following sections of the Part A form. You can do this in any order.
            </p>
            <ol class="moj-task-list govuk-!-margin-top-8">
                <li>
                    <h2 class="moj-task-list__section" id='heading-recommendation'>
                        Recommendation
                    </h2>
                    <ul class="moj-task-list__items">
                        <li class="moj-task-list__item">
                            <a class="moj-task-list__task-name" href="{{ changeLinkUrl({ pageId: 'recall-type-indeterminate' if recommendation.isIndeterminateSentence == true or recommendation.isExtendedSentence == true else 'recall-type', urlInfo: urlInfo, fromAnchor: 'heading-recommendation' }) }}">What you recommend</a>
                            {{ taskStatus({ hasData: taskCompleteness.statuses.recallType }) }}
                        </li>
                    </ul>

                </li>
                <li>
                    <h2 class="moj-task-list__section" id='heading-alternatives'>
                        Alternatives to recall
                    </h2>
                    <ul class="moj-task-list__items">
                        <li class="moj-task-list__item">
                            <a class="moj-task-list__task-name" href="{{ changeLinkUrl({ pageId: 'alternatives-tried', urlInfo: urlInfo, fromAnchor: 'heading-alternatives' }) }}">Alternatives
                                tried already</a>
                            {{ taskStatus({ hasData: taskCompleteness.statuses.alternativesToRecallTried }) }}
                        </li>
                    </ul>
                </li>
                <li>
                    <h2 class="moj-task-list__section" id='heading-circumstances'>
                        Circumstances
                    </h2>
                    <ul class="moj-task-list__items">
                        <li class="moj-task-list__item">
                            <a class="moj-task-list__task-name" href="{{ changeLinkUrl({ pageId: 'is-indeterminate', urlInfo: urlInfo, fromAnchor: 'heading-circumstances' }) }}">{{ pageHeadings.isIndeterminateSentence }}</a>
                            {{ taskStatus({ hasData: taskCompleteness.statuses.isIndeterminateSentence }) }}
                        </li>
                        <li class="moj-task-list__item">
                            <a class="moj-task-list__task-name" href="{{ changeLinkUrl({ pageId: 'is-extended', urlInfo: urlInfo, fromAnchor: 'heading-circumstances' }) }}">{{ pageHeadings.isExtendedSentence }}</a>
                            {{ taskStatus({ hasData: taskCompleteness.statuses.isExtendedSentence }) }}
                        </li>
                        {% if recommendation.isIndeterminateSentence == false and recommendation.isExtendedSentence == false and recommendation.recallType.selected.value === 'FIXED_TERM' %}
                            <li class="moj-task-list__item">
                                <a class="moj-task-list__task-name" href="{{ changeLinkUrl({ pageId: 'fixed-licence', urlInfo: urlInfo, fromAnchor: 'heading-circumstances' }) }}">Fixed term recall - additional licence conditions</a>
                                {{ taskStatus({ hasData: taskCompleteness.statuses.fixedTermAdditionalLicenceConditions }) }}
                            </li>
                        {% endif %}
                        {% if recommendation.isIndeterminateSentence == true %}
                        <li class="moj-task-list__item">
                            <a class="moj-task-list__task-name" href="{{ changeLinkUrl({ pageId: 'indeterminate-type', urlInfo: urlInfo, fromAnchor: 'heading-circumstances' }) }}">Type of indeterminate sentence</a>
                            {{ taskStatus({ hasData: taskCompleteness.statuses.indeterminateSentenceType }) }}
                        </li>
                        {% endif %}
                        <li class="moj-task-list__item">
                            <a class="moj-task-list__task-name" href="{{ changeLinkUrl({ pageId: 'response-to-probation', urlInfo: urlInfo, fromAnchor: 'heading-circumstances' }) }}">Response to probation so far</a>
                            {{ taskStatus({ hasData: taskCompleteness.statuses.responseToProbation }) }}
                        </li>
                        <li class="moj-task-list__item">
                            <a class="moj-task-list__task-name" href="{{ changeLinkUrl({ pageId: 'licence-conditions', urlInfo: urlInfo, fromAnchor: 'heading-circumstances' }) }}">Breached licence condition(s)</a>
                            {{ taskStatus({ hasData: taskCompleteness.statuses.licenceConditionsBreached }) }}
                        </li>
                        <li class="moj-task-list__item">
                            <a class="moj-task-list__task-name" href="{{ urlInfo.basePath }}what-led">What has led to this recall?</a>
                            {{ taskStatus({ hasData: taskCompleteness.statuses.whatLedToRecall }) }}
                        </li>
                        {% if recommendation.isIndeterminateSentence == false and recommendation.isExtendedSentence == false and recommendation.recallType.selected.value === 'STANDARD' %}
                        <li class="moj-task-list__item">
                            <a class="moj-task-list__task-name" href="{{ changeLinkUrl({ pageId: 'emergency-recall', urlInfo: urlInfo, fromAnchor: 'heading-circumstances' }) }}">Emergency recall</a>
                            {{ taskStatus({ hasData: taskCompleteness.statuses.isThisAnEmergencyRecall }) }}
                        </li>
                        {% endif %}
                    </ul>
                </li>
                <li>
                    <h2 class="moj-task-list__section" id='heading-vulnerability'>
                        Vulnerability and additional needs
                    </h2>
                    <ul class="moj-task-list__items">
                        <li class="moj-task-list__item">
                            <a class="moj-task-list__task-name" href="{{ urlInfo.basePath }}vulnerabilities">Would recall affect vulnerability or additional
                                needs?</a>
                            {{ taskStatus({ hasData: taskCompleteness.statuses.vulnerabilities }) }}
                        </li>
                    </ul>
                </li>
                <li>
                    <h2 class="moj-task-list__section" id='heading-victim-liaison'>
                        Victim liaison
                    </h2>
                    <ul class="moj-task-list__items">
                        <li class="moj-task-list__item">
                            <a class="moj-task-list__task-name" href="{{ urlInfo.basePath }}victim-contact-scheme">Are there any victims in the victim contact scheme?</a>
                            {{ taskStatus({ hasData: taskCompleteness.statuses.hasVictimsInContactScheme }) }}
                        </li>
                    </ul>
                </li>
                <li>
                    <h2 class="moj-task-list__section" id='heading-custody'>
                        Custody
                    </h2>
                    <ul class="moj-task-list__items">
                        <li class="moj-task-list__item">
                            <a class="moj-task-list__task-name" href="{{ changeLinkUrl({ pageId: 'custody-status', urlInfo: urlInfo, fromAnchor: 'heading-custody' }) }}">Is {{ recommendation.personOnProbation.name }} in
                                custody now?</a>
                            {{ taskStatus({ hasData: taskCompleteness.statuses.custodyStatus }) }}
                        </li>
                        {% if not recommendation.isInCustody %}
                        <li class="moj-task-list__item">
                            <a class="moj-task-list__task-name" href="{{ urlInfo.basePath }}police-details">Local police contact details</a>
                            {{ taskStatus({ hasData: taskCompleteness.statuses.localPoliceContact }) }}
                        </li>
                        {% endif %}
                        <li class="moj-task-list__item">
                            <a class="moj-task-list__task-name" href="{{ urlInfo.basePath }}iom">Is {{ recommendation.personOnProbation.name }} under Integrated Offender Management (IOM)?</a>
                            {{ taskStatus({ hasData: taskCompleteness.statuses.isUnderIntegratedOffenderManagement }) }}
                        </li>
                        {% if not recommendation.isInCustody %}
                        <li class="moj-task-list__item">
                            <a class="moj-task-list__task-name" href="{{ urlInfo.basePath }}arrest-issues">Is there anything the police should know before they arrest {{ recommendation.personOnProbation.name }}?</a>
                            {{ taskStatus({ hasData: taskCompleteness.statuses.hasArrestIssues }) }}
                        </li>
                        {% endif %}
                        <li class="moj-task-list__item">
                            <a class="moj-task-list__task-name" href="{{ urlInfo.basePath }}contraband">Do you think {{ recommendation.personOnProbation.name }} is using recall to bring contraband into prison?</a>
                            {{ taskStatus({ hasData: taskCompleteness.statuses.hasContrabandRisk }) }}
                        </li>
                    </ul>
                </li>
            </ol>
            {% if taskCompleteness.areAllComplete == true %}
            <div>
                <a href='{{ urlInfo.basePath }}confirmation-part-a' class='govuk-button govuk-button--primary'>Create Part A</a>
            </div>
            {% endif %}
        </div>
    </div>

{% endblock %}

