{
  "name": "make-recall-decision-ui",
  "version": "0.0.1",
  "description": "Make Recall Decision UI",
  "repository": "git@github.com:ministryofjustice/make-recall-decision-ui.git",
  "license": "MIT",
  "scripts": {
    "prepare": "husky install",
    "copy-views": "cp -R server/views dist/server/",
    "compile-sass": "sass --quiet-deps --no-source-map --load-path=node_modules/govuk-frontend --load-path=node_modules/@ministryofjustice/frontend --load-path=. ./assets/sass/application.sass:./assets/stylesheets/application.css ./assets/sass/application-ie8.sass:./assets/stylesheets/application-ie8.css --style compressed",
    "watch-ts": "tsc -w",
    "watch-views": "nodemon --watch server/views -e html,njk -x npm run copy-views",
    "watch-node": "DEBUG=gov-starter-server* nodemon --watch dist/ --inspect=0.0.0.0 dist/server.js | bunyan -o short",
    "watch-sass": "npm run compile-sass -- --watch",
    "build": "npm run compile-sass && tsc && npm run copy-views",
    "start": "node $NODE_OPTIONS dist/server.js | bunyan -o short",
    "start:dev": "export $(cat .env) && npm run build && concurrently -k -p \"[{name}]\" -n \"Views,TypeScript,Node,Sass\" -c \"yellow.bold,cyan.bold,green.bold,blue.bold\" \"npm run watch-views\" \"npm run watch-ts\" \"npm run watch-node\" \"npm run watch-sass\"",
    "start-feature": "export $(cat feature.env) && node $NODE_DEBUG_OPTION dist/server.js | bunyan -o short",
    "start:e2e": "export $(cat e2e.env) && npm run build && concurrently -k -p \"[{name}]\" -n \"Views,TypeScript,Node,Sass\" -c \"yellow.bold,cyan.bold,green.bold,blue.bold\" \"npm run watch-views\" \"npm run watch-ts\" \"npm run watch-node\" \"npm run watch-sass\"",
    "watch-node-feature": "export $(cat feature.env) && nodemon --watch dist/ --inspect=0.0.0.0 $NODE_DEBUG_OPTION dist/server.js | bunyan -o short",
    "start-feature:dev": "npm run build && concurrently -k -p \"[{name}]\" -n \"Views,TypeScript,Node,Sass\" -c \"yellow.bold,cyan.bold,green.bold,blue.bold\" \"npm run watch-views\" \"npm run watch-ts\" \"npm run watch-node-feature\" \"npm run watch-sass\"",
    "record-build-info": "node ./bin/record-build-info",
    "lint": "eslint . --cache --max-warnings 0",
    "lint:fix": "eslint . --cache --max-warnings 0 --fix",
    "swagger-to-ts": "node ./scripts/swagger-to-ts.js",
    "typecheck": "tsc --noEmit && tsc --noEmit -p integration_tests && tsc --noEmit -p e2e_tests",
    "test": "jest --forceExit",
    "test:coverage": "jest --coverage --runInBand",
    "security_audit": "npx audit-ci --config audit-ci.json",
    "int-test": "cypress run --browser chrome --config-file integration_tests/cypress.config.ts",
    "int-test-ui": "cypress open --config-file integration_tests/cypress.config.ts",
    "e2e": "export $(cat .env) && npx cypress open --config-file e2e_tests/cypress.config.ts",
    "e2e:report": "node e2e_tests/cucumber-report.js",
    "accessibility-test": "cypress run --browser chrome --config specPattern=integration_tests/accessibility/*.spec.ts --config-file integration_tests/cypress.config.ts",
    "accessibility-test-ui": "cypress open --config specPattern=integration_tests/accessibility/*.spec.ts --config-file integration_tests/cypress.config.ts",
    "clean": "rm -rf dist build node_modules stylesheets"
  },
  "engines": {
    "node": "^18",
    "npm": "^8"
  },
  "jest": {
    "preset": "ts-jest",
    "transform": {
      "^.+\\.tsx?$": [
        "ts-jest",
        {
          "isolatedModules": true
        }
      ]
    },
    "collectCoverageFrom": [
      "server/**/*.{ts,js,jsx,mjs}"
    ],
    "coveragePathIgnorePatterns": [
      "@types"
    ],
    "coverageReporters": [
      "text",
      "html"
    ],
    "testMatch": [
      "<rootDir>/(server|job)/**/?(*.)(spec|test).{ts,js,jsx,mjs}"
    ],
    "testEnvironment": "node",
    "reporters": [
      "default",
      [
        "jest-junit",
        {
          "outputDirectory": "test_results/jest/"
        }
      ]
    ],
    "moduleFileExtensions": [
      "web.js",
      "js",
      "json",
      "node",
      "ts"
    ],
    "resetMocks": true
  },
  "nodemonConfig": {
    "ignore": [
      ".circleci/*",
      "migrations/*",
      "node_modules/*",
      "test/*",
      "integration_tests/*",
      "e2e_tests/*"
    ],
    "delay": 2500,
    "ext": "js,json,html,njk"
  },
  "lint-staged": {
    "*.{ts,js,css}": [
      "prettier --write",
      "eslint --fix"
    ],
    "*.json": [
      "prettier --write"
    ]
  },
  "cypress-cucumber-preprocessor": {
    "stepDefinitions": "e2e_tests/integration/stepDefinitions/*.ts",
    "nonGlobalStepDefinitions": false,
    "json": {
      "enabled": false
    }
  },
  "dependencies": {
    "@aws-sdk/client-sqs": "^3.236.0",
    "@ministryofjustice/frontend": "^1.6.3",
    "@sentry/node": "^7.28.1",
    "@sentry/tracing": "^7.28.1",
    "@types/qs": "^6.9.7",
    "agentkeepalive": "^4.2.1",
    "applicationinsights": "^2.3.6",
    "body-parser": "^1.20.1",
    "bunyan": "^1.8.15",
    "bunyan-format": "^0.2.1",
    "compression": "^1.7.4",
    "connect-flash": "^0.1.1",
    "connect-redis": "^6.1.3",
    "cookie-parser": "^1.4.6",
    "cookie-session": "^2.0.0",
    "csurf": "^1.11.0",
    "dotenv": "^16.0.3",
    "express": "^4.18.2",
    "express-prom-bundle": "^6.6.0",
    "express-session": "^1.17.3",
    "google-libphonenumber": "^3.2.31",
    "govuk-frontend": "^4.4.1",
    "helmet": "^6.0.1",
    "http-errors": "^2.0.0",
    "jquery": "^3.6.3",
    "jwt-decode": "^3.1.2",
    "luxon": "^3.1.1",
    "mammoth": "^1.5.1",
    "nocache": "^3.0.4",
    "nunjucks": "^3.2.3",
    "passport": "^0.6.0",
    "passport-oauth2": "^1.6.1",
    "prom-client": "^14.1.0",
    "redis": "^3.1.2",
    "string-strip-html": "8.3.0",
    "superagent": "^8.0.6",
    "ts-loader": "^9.4.2",
    "url-value-parser": "^2.2.0",
    "uuid": "^9.0.0",
    "web-vitals": "^3.1.0"
  },
  "devDependencies": {
    "@aws-sdk/types": "^3.226.0",
    "@badeball/cypress-cucumber-preprocessor": "^15.0.0",
    "@bahmutov/cypress-esbuild-preprocessor": "^2.1.5",
    "@types/bunyan": "^1.8.8",
    "@types/bunyan-format": "^0.2.5",
    "@types/compression": "^1.7.2",
    "@types/connect-flash": "0.0.37",
    "@types/connect-redis": "^0.0.19",
    "@types/cookie-parser": "^1.4.3",
    "@types/cookie-session": "^2.0.44",
    "@types/csurf": "^1.11.2",
    "@types/cypress-cucumber-preprocessor": "^4.0.1",
    "@types/express": "^4.17.15",
    "@types/express-session": "^1.17.5",
    "@types/google-libphonenumber": "^7.4.23",
    "@types/http-errors": "^2.0.1",
    "@types/jest": "^29.2.4",
    "@types/jsonwebtoken": "^8.5.9",
    "@types/luxon": "^3.1.0",
    "@types/node": "^18.11.17",
    "@types/nunjucks": "^3.2.1",
    "@types/passport": "^1.0.11",
    "@types/passport-oauth2": "^1.4.11",
    "@types/redis": "^2.8.32",
    "@types/superagent": "^4.1.16",
    "@types/supertest": "^2.0.12",
    "@types/uuid": "^9.0.0",
    "@typescript-eslint/eslint-plugin": "^5.47.0",
    "@typescript-eslint/parser": "^5.47.0",
    "audit-ci": "^6.4.1",
    "axe-core": "4.6.1",
    "concurrently": "^7.6.0",
    "cypress": "^11.2.0",
    "cypress-axe": "^1.1.0",
    "cypress-multi-reporters": "^1.6.2",
    "eslint": "^8.30.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-import-resolver-typescript": "^3.5.2",
    "eslint-plugin-cypress": "^2.12.1",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-no-only-tests": "^3.1.0",
    "eslint-plugin-prettier": "^4.2.1",
    "husky": "^8.0.2",
    "jest": "^29.3.1",
    "jest-html-reporter": "^3.7.0",
    "jest-junit": "^15.0.0",
    "jsonwebtoken": "^9.0.0",
    "lint-staged": "^13.1.0",
    "mocha-junit-reporter": "^2.2.0",
    "multiple-cucumber-html-reporter": "^3.0.1",
    "nock": "^13.2.9",
    "nodemon": "^2.0.20",
    "openapi-typescript-codegen": "^0.23.0",
    "pdf-parse": "^1.1.1",
    "prettier": "^2.8.1",
    "sass": "^1.57.1",
    "supertest": "^6.3.3",
    "ts-jest": "^29.0.3",
    "typescript": "^4.9.4",
    "wait-for-expect": "^3.0.2",
    "xml2js": "^0.4.23"
  },
  "overrides": {
    "minimatch": "3.0.5"
  }
}
