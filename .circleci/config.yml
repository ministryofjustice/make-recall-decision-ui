version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@3.14
  slack: circleci/slack@4.4.2

parameters:
  alerts-slack-channel:
    type: string
    default: make-recall-decisions-pipeline

  releases-slack-channel:
    type: string
    default: make-recall-decisions-pipeline

  node-version:
    type: string
    default: 16.14-browsers

jobs:
  build:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci --no-audit
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - ~/.cache
      - run:
          command: |
            npm run build
            DATE=$(date '+%Y-%m-%d')
            export BUILD_NUMBER=${DATE}.${CIRCLE_BUILD_NUM}
            export GIT_REF="$CIRCLE_SHA1"
            npm run record-build-info
      - run: # Run linter after build because the integration test code depend on compiled typescript...
          name: Linter check
          command: npm run lint
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - build-info.json
            - build
            - dist
            - .cache/Cypress

  check_outdated:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-npm
          command: 'npm ci --no-audit'
      - run:
          name: Check version
          command: 'npm --version'
      - run:
          name: Run check
          command: 'npm outdated typescript govuk-frontend'
      - slack/notify:
          event: fail
          channel: << pipeline.parameters.alerts-slack-channel >>
          template: basic_fail_1

  unit_test:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    resource_class: xlarge
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: unit tests
          command: npm run test
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test_results/unit-test-reports.html

  integration_test:
    executor:
      name: hmpps/node_redis
      node_tag: << pipeline.parameters.node-version >>
      redis_tag: buster
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Install missing OS dependency
          command: sudo apt-get install libxss1
      - run:
          name: Get wiremock
          command: curl -o wiremock.jar https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-standalone/2.27.1/wiremock-standalone-2.27.1.jar
      - run:
          name: Run wiremock
          command: java -jar wiremock.jar --port 9091
          background: true
      - run:
          name: Run the node app.
          command: npm run start-feature
          background: true
      - run:
          name: Wait for node app to start
          command: sleep 5
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: integration tests
          command: npm run int-test
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: integration-tests/videos
      - store_artifacts:
          path: integration-tests/screenshots

  e2e_environment_test:
    docker:
      - image: cypress/browsers:node16.14.2-slim-chrome100-ff99-edge
    parallelism: 1
    parameters:
      environment:
        type: string
        default: dev
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci --no-audit
      - run:
          name: E2E Check - << parameters.environment >>
          command: |
            SPECS=$(circleci tests glob e2e_tests/integration/*.feature | circleci tests split --split-by=timings | tr "\n" "," | tr " " ",")
            echo "Running feature spec(s): ${SPECS}"

            npx cypress run \
              --env USERNAME=${CYPRESS_USERNAME_<< parameters.environment >>},PASSWORD=${CYPRESS_PASSWORD_<< parameters.environment >>} \
              --config-file e2e_tests/cypress.json \
              --config baseUrl=https://make-recall-decision-<< parameters.environment >>.hmpps.service.justice.gov.uk \
              --browser edge \
              --record false \
              --spec $SPECS

            npm run e2e:report
            node scripts/fix-junit-reports.js
      - store_artifacts:
          path: e2e_tests/screenshots
          destination: screenshots
      - store_artifacts:
          path: e2e_tests/reports
          destination: reports
      - store_artifacts:
          path: e2e_tests/junit
          destination: junit
      - store_test_results:
          path: e2e_tests/junit

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - unit_test:
          requires:
            - build
      - integration_test:
          requires:
            - build
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main

      - hmpps/deploy_env:
          name: deploy_dev
          env: dev
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - helm_lint
            - unit_test
            - integration_test
            - build_docker
      - hmpps/sentry_release_and_deploy:
          name: notify_sentry_dev
          sentry_project: make-recall-decision-ui
          sentry_environment: DEV
          sentry_create_release: true
          requires:
            - deploy_dev
          context:
            - hmpps-common-vars
      - e2e_environment_test:
          name: e2e_test_dev
          environment: dev
          requires:
            - deploy_dev

      - hmpps/deploy_env:
         name: deploy_preprod
         env: preprod
         context:
           - hmpps-common-vars
           - make-recall-decision-ui-preprod
         requires:
           - deploy_dev
      - hmpps/sentry_release_and_deploy:
          name: notify_sentry_preprod
          sentry_project: make-recall-decision-ui
          sentry_environment: PRE-PROD
          sentry_create_release: true
          requires:
            - deploy_preprod
          context:
            - hmpps-common-vars
      - e2e_environment_test:
          name: e2e_test_preprod
          environment: preprod
          requires:
            - deploy_preprod

      - hmpps/deploy_env:
         name: deploy_prod
         env: prod
         slack_notification: true
         slack_channel_name: << pipeline.parameters.releases-slack-channel >>
         context:
           - hmpps-common-vars
           - make-recall-decision-ui-prod
         requires:
           - deploy_preprod
      - hmpps/sentry_release_and_deploy:
          name: notify_sentry_prod
          sentry_project: make-recall-decision-ui
          sentry_environment: PROD
          sentry_create_release: true
          requires:
            - deploy_prod
          context:
            - hmpps-common-vars

  security:
    triggers:
      - schedule:
          cron: "24 4 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - check_outdated:
          context:
            - hmpps-common-vars
      - hmpps/npm_security_audit:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/trivy_latest_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/veracode_pipeline_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars

  security-weekly:
    triggers:
      - schedule:
          cron: "48 4 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
